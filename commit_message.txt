docs: チュートリアル形式のドキュメントを追加

- README.mdを更新し、アプリケーションの機能、使い方、技術スタックなどを追加
- CHANGELOG.mdをチュートリアル形式に更新し、ステップバイステップの実装手順を詳細に記載
- 各ステップで実行したコマンドを追加
- 学習ポイントと発展課題のセクションを追加

# プロンプト履歴

1. Q: .clinerules-basic-design の基本設計に従い、Next.js アプリを作成してほしい。まずは計画を策定して。その他、ルールは .clinerules に従ってください。なお、プロジェクトは git init でまず初期化し、その後はできるだけ細かい単位でコミットを行ってください。 A: プロジェクトの初期化と基本設定を実施

2. Q: ちょっと待った。Next.js初心者が理解しながら作ることを考えると、一気にすべての機能を作成してコミットしてしまうのは正しくありません。少しずつ作り上げ、少しずつ動作確認し、少しずつコミットするように心がけてください。コンポーネントは一度中身を削除し、最初からやり直して。 A: 基本的なUIコンポーネントを実装し、タイマー状態管理を追加

3. A: タイマー制御機能を実装し、動作確認を実施

4. A: 円形プログレスバーを実装し、動作確認を実施

5. Q: 一旦、clinerules-outlineと照らし合わせ、タスクが適切に進んでいるかどうかを確認してください。 A: モード切替ボタンを追加し、動作確認を実施

6. Q: コミットしました。次なんですが、LocalStorageはやめようと思います。そこで通知機能を作ってほしい。 A: 通知機能を実装

7. Q: ここまででストップしましょう。では、ここまでやってきた内容をチュートリアル形式におこしていきたいと思います。使い方やできることなどをREADME.md に追記しつつ、ステップバイステップでどうやってつくりあげていったかを、CHANGELOGに追記してください。ただし、ソースコード自体は直接書かないでOKです。途中でインストールやプロジェクト作成などのために行なったコマンドなどはCHANGELOGに書いてください。 A: チュートリアル形式のドキュメントを作成
